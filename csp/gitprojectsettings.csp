<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>IRIS/Git Integration Settings</title>
<link rel="stylesheet" type="text/css" href="css/bootstrap.min.css" />
<link rel="stylesheet" type="text/css" href="css/git-webui.css" />
#(##class(SourceControl.Git.Utils).GetSourceControlInclude())#
<style type='text/css'>
.error {
    color: red;
}

body {
    font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
    font-size: 1rem;
    font-weight: 350;
    line-height: 1.5;
    color: #212529;
    text-align: left;
}


.btn-add {
    border:none;
    padding:0%;
    margin-left:0%;
    margin-top:-2%;
}
.btn-remove {
    border: 1px solid #ced4da;
    border-left: none;
    border-radius: 0 0.25rem 0.25rem 0;
}

#NoFolders {
    display: none;
}
#webuiURL {
    display: none;
}
#homeURL {
    display: none;
}

.custom-switch {
    padding: 0.4rem 0.5rem 0 2.75rem;
    border: 1px solid #ced4da;
    border-left: 0px;
}

.custom-switch-no-border {
    border: 0px;
}

.neutral-feedback {
    width: 100%;
    margin-top: 0.25rem;
    font-size: 80%;
}

.form-rad {
    padding-left: 30px;
}

.form-rad-label {
    padding-left: 4px;
}

.alert {
  padding: 20px;
  background-color: #04AA6D;;
  color: white;
}

.closebtn {
  margin-left: 15px;
  color: white;
  font-weight: bold;
  float: right;
  font-size: 22px;
  line-height: 20px;
  cursor: pointer;
  transition: 0.3s;
}

.closebtn:hover {
  color: black;
}

</style>
</head>
<body>
<server>
 set namespace = $namespace
 set version = ##class(SourceControl.Git.Utils).GetPackageVersion()
 set webuiURL = "/isc/studio/usertemplates/gitsourcecontrol/webuidriver.csp/"_namespace_"/?CSPSHARE=1"
 set webuiURL = ##class(SourceControl.Git.WebUIDriver).GetURLPrefix(%request, webuiURL)
 set homeURL = ##class(SourceControl.Git.WebUIDriver).GetHomeURL()

 set settings = ##class(SourceControl.Git.Settings).%New()
 set remote = ##class(SourceControl.Git.Utils).GetRedactedRemote()
 /// After Save
 if (%request.Method="POST") && $Data(%request.Data("gitsettings",1)) {
    for param="gitUserName","gitUserEmail" {
        set $Property(settings,param) = $Get(%request.Data(param,1))
    }
    if ('settings.settingsUIReadOnly) {
        for param="gitBinPath","namespaceTemp","privateKeyFile","pullEventClass","percentClassReplace", "defaultMergeBranch","environmentName" {
            set $Property(settings,param) = $Get(%request.Data(param,1))
        }

        if ($Get(%request.Data("mappedItemsReadOnly", 1)) = 1) {
            set settings.mappedItemsReadOnly = 1
        } else {
            set settings.mappedItemsReadOnly = 0
        }

        set newRemote = $Get(%request.Data("remoteRepo",1))
        // If entry was modified, set new remote repo
        if (newRemote '= ##class(SourceControl.Git.Utils).GetRedactedRemote()) {
            do ##class(SourceControl.Git.Utils).SetConfiguredRemote(newRemote)
        }

        set settings.compileOnImport = ($Get(%request.Data("compileOnImport", 1)) = 1)
        set settings.decomposeProductions = ($Get(%request.Data("decomposeProductions", 1)) = 1)
        set settings.decomposeProdAllowIDE = ($Get(%request.Data("decomposeProdAllowIDE", 1)) = 1)
        set settings.lockBranch = ($Get(%request.Data("lockBranch", 1)) = 1)

        if ($Get(%request.Data("basicMode", 1)) = 1) {
            set settings.basicMode = 1
        } elseif ($Get(%request.Data("basicMode", 1)) = "system"){
            set settings.basicMode = "system"
        } else {
            set settings.basicMode = 0
        }

        if ($Get(%request.Data("systemBasicMode", 1)) = 1) {
            set settings.systemBasicMode = 1
        } else {
            set settings.systemBasicMode = 0
        }
        set i = 1
        set param = "NoFolders"
        kill settings.Mappings
        
        while ( $Data(%request.Data("MappingsExt",i)) ){
        if ($get(%request.Data("MappingsExt",i)) '= "") {
                if ($Get(%request.Data(param,i)) = "NoFolders"){
                    set settings.Mappings($Get(%request.Data("MappingsExt",i)), $Get(%request.Data("MappingsCov",i)), $Get(%request.Data(param,i))) = 1
                }
                set settings.Mappings($Get(%request.Data("MappingsExt",i)), $Get(%request.Data("MappingsCov",i))) = $Get(%request.Data("MappingsPath",i))
        }
            set i = i+1
        }

        set i = 1
        set contexts = []

        while ( $Data(%request.Data("favNamespace",i)) ){
        if ($Get(%request.Data("favNamespace",i)) '= "") {
            do contexts.%Push($Get(%request.Data("favNamespace",i)))
        }
        set i = i+1
        }

        set settings.favoriteNamespaces = contexts

        if ($get(%request.Data("proxySubmitButton",1)) = "saveDefaults") {
            do settings.SaveDefaults()
        }
    }
    set err = ""
    try {
        set buffer = ##class(SourceControl.Git.Util.Buffer).%New()
        do buffer.BeginCaptureOutput()
        $$$ThrowOnError(settings.SaveWithSourceControl())
        do buffer.EndCaptureOutput(.out)
        if (out '= "") {
            &html<<div class="alert alert-primary">
                    <div>#(..EscapeHTML(out))#</div>
                </div>>
        }
    } catch err {
        kill buffer
        do err.Log()
        &html<<div class="alert alert-danger">An error occurred and has been logged to the application error log.</div>>
    }
}
</server>
<div class = 'container'>
    <csp:if condition='$D(%request.Data("gitsettings",1)) && (##class(SourceControl.Git.Utils).NeedSettings() = 0)'>
        <div class = "alert">
        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>  
        <strong>Success!</strong> Your changes have been saved.
    </div>
    </csp:if>
    <form id="settingsForm" method='post'>
        <input type="hidden" name="Namespace" value="#(..EscapeHTML(namespace))#" />
        <input type="hidden" name="gitsettings" value="1" />
        <div class="col-sm-12"><br></div>
        <div class="row">
            <div class="offset-sm-1 col-sm-7" id="settingsTitle">
                <h1>Git Project Settings</h1>
                <h3> Package version: #(version)# </h3>
            </div>

            <div class="col-sm-4" id="settingsNavBtn">
                <button class="btn btn-lg btn-outline-dark" id="goToHome">Home
                </button>
                <div id="homeURL">
                    #(homeURL)#
                </div>
                <button class="btn btn-lg btn-outline-dark" id="goToWebUI">Go to WebUI
                </button>
                <div id="webuiURL">
                    #(webuiURL)#
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-1"><br/></div>
            <div class="col-md-10"><hr></div>
        </div>
        <div class="row">
            <div class="offset-sm-1 col-sm-11">
                <h3>Settings for namespace #(..EscapeHTML(namespace))# #($select(settings.settingsUIReadOnly:"(read-only)",1:""))#</h3><br/>
            </div>
        </div>

        <fieldset id="namespaceSettings">
        <div class="form-group row mb-3">
            <label for="gitBinPath" class="offset-sm-1 col-sm-3 col-form-label"  data-toggle="tooltip" data-placement="top" title="Absolute path to the Git executable"><b>Path to git.exe</b></label>
            <div class="col-sm-7">
                <server>
                    set exists = ##class(SourceControl.Git.Utils).GitBinExists(.version)
                    set placeholder = $Select($system.Version.GetOS()="Windows":"(e.g. C:\Program Files\Git\bin\git.exe)",
                        1:"(e.g., /usr/bin/git)")
                    
                    set class = "form-control"
                    set divClass = ""
                    set feedbackText = ""

                    if (exists && (settings.gitBinPath = "")) {
                        set placeholder = "(available via PATH at version shown below)"
                        set divClass = "neutral-feedback"
                        set feedbackText = version
                    } elseif (exists){
                        set class = class_" is-valid"
                        set divClass = "valid-feedback"
                        set feedbackText = version
                    } elseif ('$length(version)){
                        set class = class_" is-invalid"
                        set divClass = "invalid-feedback"
                        set feedbackText = "File not found"
                    }
                </server>
                <input type="text" class="#(class)#" id="gitBinPath" name="gitBinPath" value='#(..EscapeHTML(settings.gitBinPath))#' placeholder="#(placeholder)#">
                <div class = "#(divClass)#">
                    #(feedbackText)#
                </div>
            </div>
        </div>

        <div class="form-group row mb-3">
            <label for="namespaceTemp" class="offset-sm-1 col-sm-3 col-form-label"  data-toggle="tooltip" data-placement="top" title="Absolute path to you project">Git Repo Root Directory<br/></label>
            <server>
                set dir = ##class(%File).NormalizeDirectory(settings.namespaceTemp)
                if (settings.namespaceTemp '= "") && ##class(%File).DirectoryExists(dir_".git") {
                    set class = "form-control is-valid"
                } else {
                    set class = "form-control"
                }
                set placeholder = $Select($system.Version.GetOS()="Windows":"(e.g. C:\someproj\)",
                        1:"(e.g., /someproj/)")
            </server>
            <div class="col-sm-7">
                <input type="text" class="#(class)#" id="namespaceTemp" name="namespaceTemp" value='#(..EscapeHTML(settings.namespaceTemp))#' placeholder=#(placeholder)#/>
            </div>
        </div>
        <server>
            set dir = ##class(%File).NormalizeDirectory(settings.namespaceTemp)
            if (settings.namespaceTemp '= "") && '##class(%File).DirectoryExists(dir_".git") {
                &html<
                <div class="form-group row mb-3">
                    <div class="offset-sm-4 col-sm-8 neutral-feedback">
                        <span id="initMsg">Git has not been not initialized for folder.</span>
                        <button id="initBtn" onclick="init(); return false;" class="btn btn-sm btn-outline-dark">Initialize</button>
                        <button id="cloneBtn" onclick="clone(); return false;" class="btn btn-sm btn-outline-dark">Clone...</button>
                        <pre id="initOutput"></pre>
                    </div>
                </div>
                >
            }
        </server>
        <div class="form-group row mb-3">
            <label for="privateKeyFile" class="offset-sm-1 col-sm-3 col-form-label"  data-toggle="tooltip" data-placement="top" title="Absolute path to your private SSH key file">SSH Private Key File</label>
            <div class="col-sm-7">
                <server>
                    Set fileExists = ##class(%File).Exists(settings.privateKeyFile)
                    if (settings.privateKeyFile = "") {
                        set class = "form-control"
                        set divClass = "neutral-feedback"
                        set feedbackText = "You must configure an SSH private key to be able to work with remotes. This should be set up as a deploy key / equivalent, authenticating the server, not a specific user."
                    } elseif (fileExists) {
                        set class = "form-control is-valid"
                        set divClass = ""
                        set feedbackText = ""
                    } else {
                        set class = "form-control is-invalid"
                        set divClass = "invalid-feedback"
                        set feedbackText = "<button class='btn btn-sm btn-outline-dark' onclick='genSSH(); return false;'>"_
                            "File not found - generate a new key pair?"_
                            "</button>"
                    }
                    set placeholder = $Select($system.Version.GetOS()="Windows":"(e.g. C:\Users\ExampleUser\.ssh\id_rsa)",
                        1:"(e.g., /home/user/.ssh/id_rsa)")
                </server>
                <input type="text" class="#(class)#" id="privateKeyFile" name="privateKeyFile" value='#(..EscapeHTML(settings.privateKeyFile))#' placeholder=#(placeholder)#/>
                <div class = "#(divClass)#">
                    #(feedbackText)#
                    <pre id="sshOutput"></pre>
                </div>
            </div>
        </div>

        <server>
        if (settings.privateKeyFile '= "") && fileExists {
            set pubKeyName = settings.privateKeyFile_".pub"
            if ##class(%File).Exists(pubKeyName) {
                set pubStream = ##class(%Stream.FileCharacter).%OpenId(pubKeyName)
                set pubKeyText = ""
                while 'pubStream.AtEnd {
                    set pubKeyText = pubKeyText_pubStream.Read()
                }
                &html<
                    <div class="form-group row mb-3">
                        <div class="offset-sm-1 col-sm-3">Public key:</div>
                        <div class="col-sm-5">
                            <pre id="publicKey">#(pubKeyText)#</pre>
                        </div>
                        <div class="col-sm-1">
                            <button class='btn btn-sm btn-outline-dark' onclick="copyToClipboard('publicKey'); return false;">Copy</button>
                        </div>
                    </div>
                >
            }
        }
        </server>

        <div class="form-group row mb-3">
            <label for="pullEventClass" class="offset-sm-1 col-sm-3 col-form-label"  data-toggle="tooltip" data-placement="top" title="Handler class for git pull"><b>Pull Event Class</b></label>
            <div class="col-sm-7">
                <select class="form-control" id="pullEventClass" name="pullEventClass">
                    <server>
                        set rs = ##class(%Dictionary.ClassDefinition).SubclassOfFunc("SourceControl.Git.PullEventHandler")
                        while rs.%Next() {
                            set subclass = rs.%GetData(1)
                            // create option with subclass, set selected if subclass == current pullEventClass
                            &html<<option value=#(subclass)# #($CASE(subclass, settings.pullEventClass: "selected", :""))#>#($PIECE(subclass, ".", *-0))# </option>>
                        }
                    </server>
                </select>
            </div>
        </div>

        <div class="form-group row mb-3">
            <label for="environmentName" class="offset-sm-1 col-sm-3 col-form-label"  data-toggle="tooltip" data-placement="top" title="Environment Name"><b>Environment Name</b></label>
            <div class="col-sm-7">
                <select class="form-control" id="environmentName" name="environmentName">
                    <server>
                        for envName = "TEST","DEVELOPMENT","LIVE","FAILOVER","" {
                            // create option with envName, set selected if envName == current environmentName
                            &html<<option #($CASE(envName, settings.environmentName: "selected", :""))# value=#(envName)#>#(envName)# </option>>
                        }
                    </server>
                </select>
            </div>
        </div>

        <div class="form-group row mb-3">
            <label for="percentClassReplace" class="offset-sm-1 col-sm-3 col-form-label"  data-toggle="tooltip" data-placement="top" title="Character(s) to replace '%' with for percent classes while exporting them out to the filesystem. By default, the '%' is removed."><b>'%' Replacement on Export</b></label>
            <div class="col-sm-7">
                <input type="text" class="form-control" id="percentClassReplace" name="percentClassReplace" value='#(..EscapeHTML(settings.percentClassReplace))#' placeholder="_, __, <empty>, etc."/>
            </div>
        </div>
        
        <div class="form-group row mb-3">
            <label for="systemBasicMode" class="offset-sm-1 col-sm-3 col-form-label" data-toggle="tooltip" data-placement="top" title="Enable basic mode for all users, which reduces the number of menu options and requires less knowledge of git. This is suitable for a single-developer (non-shared) namespace."><b> Basic Mode as System Default</b></label>
            <div class="col-sm-7">
            
                <div class="custom-control custom-switch custom-switch-no-border">
                    <server>
                        if (settings.systemBasicMode) {
                            &html<<input class="custom-control-input" name="systemBasicMode" type="checkbox" id="systemBasicMode" checked value="1">>
                        } else {
                            &html<<input class="custom-control-input" name="systemBasicMode" type="checkbox" id="systemBasicMode" value="1">>
                        }
                    </server>
                    
                    <label class="custom-control-label" for="systemBasicMode"></label>
                </div>
                
            </div>
            

        </div>

        <div class="form-group row mb-3">
            <label for="defaultMergeBranch" class="offset-sm-1 col-sm-3 col-form-label" data-toggle="tooltip" data-placement="top" title="In basic mode, the Sync operation will merge changes from this remote branch (leave blank for no branch)"><b>Default merge branch</b></label>
            <div class="col-sm-7">
                <input type="text" class="form-control" id="defaultMergeBranch" name="defaultMergeBranch" value='#(..EscapeHTML(settings.defaultMergeBranch))#' placeholder="sample-remote-branch">
            </div>
        </div>

        <div class="form-group row mb-3">
            <label for="remoteRepo" class="offset-sm-1 col-sm-3 col-form-label"  data-toggle="tooltip" data-placement="top" title="Url to Remote repository"><b>Remote Repository</b></label>
            <div class="col-sm-7">
                <input type="text" class="form-control" id="remoteRepo" name="remoteRepo" value='#(..EscapeHTML(remote))#' placeholder="ex. git@github.com:User/UserRepo.git"/>
                <div class = "neutral-feedback">
                    (Username is redacted)
                </div>
            </div>
        </div>
        
        <div class="form-group row mb-3">
            <label for="mappedItemsReadOnly" class="offset-sm-1 col-sm-3 col-form-label" data-toggle="tooltip" data-placement="top" title="Whether items mapped from a database other than this namespace's default routine database should be read-only. If enabled, mapped items won't be saved to source control or exported. NOTE: These are different from the mappings configured in this settings page"><b> Treat Mapped Items as Read-only</b></label>
            <div class="col-sm-7">
            
                <div class="custom-control custom-switch custom-switch-no-border">
                    <server>
                        if (settings.mappedItemsReadOnly) {
                            &html<<input class="custom-control-input" name="mappedItemsReadOnly" type="checkbox" id="mappedItemsReadOnly" checked value="1">>
                        } else {
                            &html<<input class="custom-control-input" name="mappedItemsReadOnly" type="checkbox" id="mappedItemsReadOnly" value="1">>
                        }
                    </server>
                    
                    <label class="custom-control-label" for="mappedItemsReadOnly"></label>
                </div>
                
            </div>
            

        </div>
        <div class="form-group row mb-3">
            <label for="compileOnImport" class="offset-sm-1 col-sm-3 col-form-label" data-toggle="tooltip" data-placement="top" title="If true, the Import All options will compile imported options using the configured pull event handler"><b>Compile Items on Import</b></label>
            <div class="col-sm-7">
                <div class="custom-control custom-switch custom-switch-no-border">
                    <input class="custom-control-input" name="compileOnImport" type="checkbox" 
                        id="compileOnImport" #($select(settings.compileOnImport:"checked",1:""))# value="1">
                    <label class="custom-control-label" for="compileOnImport"></label>
                </div>
            </div>
        </div>
        <div class="form-group row mb-3">
            <label for="decomposeProductions" class="offset-sm-1 col-sm-3 col-form-label" data-toggle="tooltip" data-placement="top" 
                title="If true, interoperability productions are source-controlled under separate files for each configuration item">
                Decompose Productions</label>
            <div class="col-sm-7">
                <div class="custom-control custom-switch custom-switch-no-border">
                    <input class="custom-control-input" name="decomposeProductions" type="checkbox" 
                        id="decomposeProductions" #($select(settings.decomposeProductions:"checked",1:""))# value="1">
                    <label class="custom-control-label" for="decomposeProductions"></label>
                </div>
            </div>
        </div>
        <div class="form-group row mb-3">
            <label for="decomposeProdAllowIDE" class="offset-sm-1 col-sm-3 col-form-label" data-toggle="tooltip" data-placement="top" 
                title="If true, a decomposed production class may be edited through VS Code or Studio">
                Decomposed Productions Allow IDE</label>
            <div class="col-sm-7">
                <div class="custom-control custom-switch custom-switch-no-border">
                    <input class="custom-control-input" name="decomposeProdAllowIDE" type="checkbox" 
                        id="decomposeProdAllowIDE" #($select(settings.decomposeProdAllowIDE:"checked",1:""))# value="1">
                    <label class="custom-control-label" for="decomposeProdAllowIDE"></label>
                </div>
            </div>
        </div>
        <div class="form-group row mb-3">
            <label for="lockBranch" class="offset-sm-1 col-sm-3 col-form-label" data-toggle="tooltip" data-placement="top" 
                title="If true, namespace will not have the option to create a New Branch or Switch Branch in source control menu">
                Lock Branch</label>
            <div class="col-sm-7">
                <div class="custom-control custom-switch custom-switch-no-border">
                    <input class="custom-control-input" name="lockBranch" type="checkbox" 
                        id="lockBranch" #($select(settings.lockBranch:"checked",1:""))# value="1">
                    <label class="custom-control-label" for="lockBranch"></label>
                </div>
            </div>
        </div>
        
        <div class="form-group row mb-3 mapping-input-group">
            <div class="offset-sm-1 col-sm-3">
                <label for="MappingsPath" class="col-form-label"  data-toggle="tooltip" data-placement="top" title="Relative paths mapping the files in your project. For web application files, use the extension: /CSP/">Mappings</label>
                <button type="button" class="btn btn-default btn-add" >
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="#198754" class="bi bi-plus-circle-fill" viewBox="0 0 16 16">
                        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z"></path>
                    </svg>
                </button>
            </div>
            <script language="cache" method="MakeMappingRow" arguments="extKey,covKey,mapPath,noFolders,checked,activated,tooltipTitle,idx,isTemplate">
                &html<<div class="voca col-sm-7" #($select(isTemplate:"hidden",1:""))#>
                    <div class = "input-group mb-1">
                        <input type="text" class="form-control required" id="MappingsExt" name="MappingsExt" value="#(extKey)#" placeholder="Extension" #($select(isTemplate:"",1:"required"))#>
                        <input type="text" class="form-control required" id="MappingsCov" name="MappingsCov" value="#(covKey)#" placeholder="Coverage" #($select(isTemplate:"",1:"required"))#>
                        <input type="text" class="form-control required" id="MappingsPath" name="MappingsPath" value="#(mapPath)#" placeholder="Relative path" #($select(isTemplate:"",1:"required"))#>
                        <input type="text" class="form-control" id="NoFolders" name="NoFolders" value="#(noFolders)#" placeholder="To folder, or not to folder, that is the question." readonly>
                        <div class="custom-control custom-switch" data-delay='{"show":"1000", "hide":"100"}' data-toggle="tooltip" data-placement="top" title="#(tooltipTitle)#">
                            <input type="checkbox" class="#("custom-control-input"_activated)#" id="#("noFoldersSwitch"_idx)#" #(checked)#>
                            <label class="custom-control-label" for="#("noFoldersSwitch"_idx)#">>

                            if (checked '= ""){
                                &html<<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#007bff" class="bi bi-folder-fill" viewBox="0 0 16 16">
                                    <path d="M9.828 3h3.982a2 2 0 0 1 1.992 2.181l-.637 7A2 2 0 0 1 13.174 14H2.825a2 2 0 0 1-1.991-1.819l-.637-7a1.99 1.99 0 0 1 .342-1.31L.5 3a2 2 0 0 1 2-2h3.672a2 2 0 0 1 1.414.586l.828.828A2 2 0 0 0 9.828 3zm-8.322.12C1.72 3.042 1.95 3 2.19 3h5.396l-.707-.707A1 1 0 0 0 6.172 2H2.5a1 1 0 0 0-1 .981l.006.139z"/>
                                </svg>>                                        
                            } else{
                                &html<<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-folder-x" viewBox="0 0 16 16">
                                    <path d="M.54 3.87.5 3a2 2 0 0 1 2-2h3.672a2 2 0 0 1 1.414.586l.828.828A2 2 0 0 0 9.828 3h3.982a2 2 0 0 1 1.992 2.181L15.546 8H14.54l.265-2.91A1 1 0 0 0 13.81 4H2.19a1 1 0 0 0-.996 1.09l.637 7a1 1 0 0 0 .995.91H9v1H2.826a2 2 0 0 1-1.991-1.819l-.637-7a1.99 1.99 0 0 1 .342-1.31zm6.339-1.577A1 1 0 0 0 6.172 2H2.5a1 1 0 0 0-1 .981l.006.139C1.72 3.042 1.95 3 2.19 3h5.396l-.707-.707z"/>
                                    <path d="M11.854 10.146a.5.5 0 0 0-.707.708L12.293 12l-1.146 1.146a.5.5 0 0 0 .707.708L13 12.707l1.146 1.147a.5.5 0 0 0 .708-.708L13.707 12l1.147-1.146a.5.5 0 0 0-.707-.708L13 11.293l-1.146-1.147z"/>
                                </svg>>
                            }
                            
                            &html<</label>
                        </div>
                        <div class="input-group-append">
                            <button type="button" class="btn btn-remove" >
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#dc3545" class="bi bi-dash-circle-fill" viewBox="0 0 16 16">
                                    <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM4.5 7.5a.5.5 0 0 0 0 1h7a.5.5 0 0 0 0-1h-7z"></path>
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>>
            </script>
            <script language="cache" runat=server>
                // make a hidden template row
                do ..MakeMappingRow("","","","","checked"," active","","",1)
                set extKey = ""
                set idx = 1
                for {
                    set covKey = ""
                    set extKey = $ORDER(settings.Mappings(extKey))
                    quit:extKey=""
                    for {
                        set covKey = $ORDER(settings.Mappings(extKey, covKey))
                        quit:covKey=""

                        if (idx '= 1) {
                            &html<<div class="col-sm-4" id="indent-div">
                            </div>>
                        }                        

                        if ($data(settings.Mappings(extKey, covKey, "NoFolders")) = 1){
                            set checked = ""
                            set activated = ""
                            if ($data(settings.Mappings(extKey, covKey))#2 '= 1){
                                set mapPath = $zconvert(extKey,"l")_"/"
                            } else {
                                set mapPath = settings.Mappings(extKey, covKey)
                            }
                            set noFolders = """NoFolders"""
                            set tooltipTitle = """Switch on to store files in folders split by '.'s in the name."""                            
                        } else {
                            set checked = "checked"
                            set activated = " active"
                            set mapPath = settings.Mappings(extKey, covKey)
                            set noFolders = """"""
                            set tooltipTitle = """Switch off to store files in a flat directory structure."""
                        }
                        do ..MakeMappingRow(extKey,covKey,mapPath,noFolders,checked,activated,tooltipTitle,idx,0)
                        set idx = idx + 1
                    }
                }
            </script>        
        </div>
        </fieldset>

        <br/>
        <div class="row">
            <div class="col-sm-1"></div>
            <div class="col-sm-11">
                <h3>Settings for user '#(..EscapeHTML($Username))#'</h3>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-1"></div>
            <div class="col-sm-11">
                <em>Git settings - if empty, will default to repository/global settings</em>
            </div>
        </div>

        <br/>

        <fieldset id="userSettings">
        <div class="form-group row mb-3">
            <label for="gitUserName" class="offset-sm-1 col-sm-3 col-form-label"  data-toggle="tooltip" data-placement="top" title="Firstname Lastname">Git Committer Name </label>
            <div class="col-sm-7">
                <input type="text" class="form-control" id="gitUserName" name="gitUserName" value='#(..EscapeHTML(settings.gitUserName))#'/>
            </div>
        </div>

        <div class="form-group row mb-3">
            <label for="gitUserEmail" class="offset-sm-1 col-sm-3 col-form-label"  data-toggle="tooltip" data-placement="top" title="<git-username-on-remote>@remote.com">Git Committer Email</label>
            <div class="col-sm-7">
                <input type="email" class="form-control" id="gitUserEmail" name="gitUserEmail" value='#(..EscapeHTML(settings.gitUserEmail))#'/>
            </div>
        </div>

        <div class="form-group mb-3">
            <label for="basicMode" class="offset-sm-1 col-sm-3 col-form-label form-rad-label" data-toggle="tooltip" data-placement="top" title="Enable basic mode, which reduces the number of menu options and requires less knowledge of git. This is suitable for a single-developer (non-shared) namespace.">Basic Mode</label>

            <div class="form-check offset-sm-4 form-rad">
                <server>
                    if (settings.userBasicMode = "1") {
                        &html<<input class="form-check-input" name="basicMode" type="radio" id="basicMode1" checked value="1">>
                    } else {
                        &html<<input class="form-check-input" name="basicMode" type="radio" id="basicMode1" value="1">>
                    }
                </server>
                <label class="form-check-label" for="basicMode1">
                    Use Basic Mode
                </label>
            </div> </br>
            <div class="form-check offset-sm-4 form-rad">
                <server>
                    if (settings.userBasicMode = "0") {
                        &html<<input class="form-check-input" name="basicMode" type="radio" id="basicMode0" checked value="0">>
                    } else {
                        &html<<input class="form-check-input" name="basicMode" type="radio" id="basicMode0" value="0">>
                    }
                </server>
                <label class="form-check-label" for="basicMode0">
                    Use Expert Mode
                </label>
            </div> </br>
            <div class="form-check offset-sm-4 form-rad">
                <server>
                    if (settings.userBasicMode = "system") {
                        &html<<input class="form-check-input" name="basicMode" type="radio" id="basicModeDefault" checked value="system">>
                    } else {
                        &html<<input class="form-check-input" name="basicMode" type="radio" id="basicModeDefault" value="system">>
                    }
                </server>
                <label class="form-check-label" for="basicModeDefault">
                    Use System's Default Mode
                </label>
            </div>



          <!--  <label for="basicMode" class="offset-sm-1 col-sm-3 col-form-label" data-toggle="tooltip" data-placement="top" title="Enable basic mode, which reduces the number of menu options and requires less knowledge of git. This is suitable for a single-developer (non-shared) namespace.">Basic Mode</label>
            <div class="custom-control custom-switch custom-switch-no-border">
                <server>
                    if (settings.basicMode) {
                        &html<<input class="custom-control-input" name="basicMode" type="checkbox" id="basicMode" checked value="1">>
                    } else {
                        &html<<input class="custom-control-input" name="basicMode" type="checkbox" id="basicMode" value="1">>
                    }
                </server>
                
                <label class="custom-control-label" for="basicMode"></label>
            </div> -->
        </div>

        <div class="form-group row mb-3">
            <label for="addToFav" class="offset-sm-1 col-sm-3 col-form-label"  data-toggle="tooltip" data-placement="top" title="Favorite namespaces for user to add link on Home page.">*Favorite Namespaces</label>
            <div class="col-sm-7">
                <select multiple class="form-control" id="addToFav" name="favNamespace">
                <server>
                    set nonFavNamespaces = []
                    set selectedNamespaces = []
                    do ##class(%zpkg.isc.sc.git.Favorites).GetFavoriteNamespaces(.selectedNamespaces,.nonFavNamespaces)
                    set iterator = selectedNamespaces.%GetIterator()
                    while iterator.%GetNext(.key, .value) {
                        &html<<option selected value=#(value)#>#(value)#</option>>
                    }
                    set iterator = nonFavNamespaces.%GetIterator()
                    while iterator.%GetNext(.key, .value) {   
                        &html<<option value=#(value)#>#(value)#</option>>
                    }
                </server>
                </select>
                <small> Hold the [Ctrl] or [Cmd] key while clicking to select multiple namespaces.</small>
            </div>
        </div>
        <br/>
        </fieldset>

        <div class="form-group row mb-3">
            <div class="col-sm-12 text-center">
                <input type="hidden" id="proxySubmitButton" name="proxySubmitButton" value="Save">
                <input type='submit' class="btn-lg btn-primary" value = 'Save' name="Save"/>
                <input type="submit" class="btn-lg btn-primary" id="saveDefaults" value = 'Save as Instance Defaults' title="Save these settings as default for new instances" name="saveDefaults"/>
                <div>
                    <small> Settings saved as default are <b>bolded </b> </small>
                </div>
            </div>
        </div>
        
    </form>
</div>
<script src="js/polyfills.js"></script>
<script src="js/jquery.min.js"></script>
<script src="js/popper.min.js"></script>
<script src="js/bootstrap.min.js"></script>
<script type="text/javascript">

// Removing the home button if not a top-level page
if ((window !== window.parent) || (navigator.userAgent.indexOf('MSIE 7') > -1) || (navigator.userAgent.indexOf(" Code/") > -1)) {
    $("#goToHome", self.element).remove();
    $("#homeURL", self.element).remove();
    $('#settingsTitle').removeClass('col-sm-7');
    $('#settingsNavBtn').removeClass('col-sm-4');
    $('#settingsTitle').addClass('col-sm-8');
    $('#settingsNavBtn').addClass('col-sm-2');
}

function getSocket(urlPostfix) {
    var socketURL = window.location.href.replace('http','ws').replace('gitprojectsettings.csp','_zpkg.isc.sc.git.Socket.cls') + "&" + urlPostfix;
	return new WebSocket(socketURL);
}

var submitForm = function(e) {
    e.preventDefault();
    e.stopPropagation();
    var proxySubmitButton = document.getElementById('proxySubmitButton');
    proxySubmitButton.value = "saveDefaults";
    var form = document.getElementById('settingsForm');
    form.submit();
}

document.getElementById('saveDefaults').addEventListener('click',submitForm,false);

function init() {
    disableActionButtons();
    var root = document.getElementById("namespaceTemp").value;
    var ws = getSocket("method=init&root=" + encodeURIComponent(root));
    ws.onmessage = showOutput('initOutput');
}

function clone() {
    var remote = prompt("Enter URL for repository to clone:");
    if ((remote == null) || (remote == "")) {
        return;
    }
    disableActionButtons();
	var ws = getSocket("method=clone&remote=" + encodeURIComponent(remote));
	ws.onmessage = showOutput('initOutput');
}

function genSSH() {
	var ws = getSocket("method=sshkeygen");
	ws.onmessage = showOutput('sshOutput');
}

function copyToClipboard(elementId) {
  navigator.clipboard.writeText(document.getElementById(elementId).innerText);
}

function disableActionButtons()
{
    document.getElementById('initBtn').disabled = true;
    document.getElementById('cloneBtn').disabled = true;
}

function showOutput(target) {
    return function(event) {
        // IE retains the newlines that $System.Encryption.Base64Encode adds after every 76 characters;
        // these are therefore removed.
        var msg = JSON.parse(atob(event.data.split('\r\n').join('')));
        document.getElementById(target).innerHTML += msg.content;
    }
}

$(function () {
    $('[data-toggle="tooltip"]').tooltip({
        trigger: 'hover'
    });
});
$(function()
{
    if (#(settings.settingsUIReadOnly)#) {
        $(document).ready( function() {
            $("#namespaceSettings input, select").attr("disabled",true);
        })
    }
    $(document).on('click', '.btn-add', function(e)
    {
        e.preventDefault();

        var controlForm = $('.mapping-input-group');
        $('<div class="col-sm-4" id="indent-div"> </div>').appendTo(controlForm);

        var currentEntry = $(this).parent().siblings('.voca:last');
        var newEntry = $(currentEntry.clone())

        var currentID = newEntry.children().children(".custom-control").children()[0].id
        var idx = parseInt(currentID.split("noFoldersSwitch")[1]);
        var newID = "noFoldersSwitch"+(idx+1);

        $(newEntry.children().children(".custom-control").children()[1]).attr("for", newID)
        newEntry.children().children(".custom-control").children()[0].id = newID
        newEntry.find('input').val('');
        newEntry.attr('hidden',false);
        newEntry.children().children(".required").attr("required","required");

        newEntry.appendTo(controlForm);
        $(("#"+newID)).click(toggleNoFolders);

        // Click twice to toggle and get side effects
        $(("#"+newID)).click();
        $(("#"+newID)).click();
    }).on('click', '.btn-remove', function(e)
    {
        $(this).parent().parent().parent().prev('#indent-div').remove();
        $(this).parents('.voca:first').remove();

        e.preventDefault();
        return false;
    });

    $(document).on('click', "#goToWebUI", function(e){
        e.preventDefault();
        window.location.href = $("#webuiURL")[0].innerText;
    })

    $(document).on('click', "#goToHome", function(e){
        e.preventDefault();
        window.location.href = $("#homeURL")[0].innerText;
    })
});

function toggleNoFolders(e){

    $('[data-toggle="tooltip"]').tooltip('hide');
    $(this).siblings("label").empty()

    if (!$(this).hasClass("active")) {
        $(this).addClass("active");
        $(this).siblings("label").append('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#007bff" class="bi bi-folder-fill" viewBox="0 0 16 16">'+
                                        '<path d="M9.828 3h3.982a2 2 0 0 1 1.992 2.181l-.637 7A2 2 0 0 1 13.174 14H2.825a2 2 0 0 1-1.991-1.819l-.637-7a1.99 1.99 0 0 1 .342-1.31L.5 3a2 2 0 0 1 2-2h3.672a2 2 0 0 1 1.414.586l.828.828A2 2 0 0 0 9.828 3zm-8.322.12C1.72 3.042 1.95 3 2.19 3h5.396l-.707-.707A1 1 0 0 0 6.172 2H2.5a1 1 0 0 0-1 .981l.006.139z"/>'+
                                    '</svg>');
        
        $(this).parent().siblings("#NoFolders")[0].value = ""
        $(this).parent().attr('data-original-title', 'Switch off to store files in a flat directory structure.');
    } else {
        $(this).removeClass("active");
        $(this).siblings("label").append('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-folder-x" viewBox="0 0 16 16">'+
                                        '<path d="M.54 3.87.5 3a2 2 0 0 1 2-2h3.672a2 2 0 0 1 1.414.586l.828.828A2 2 0 0 0 9.828 3h3.982a2 2 0 0 1 1.992 2.181L15.546 8H14.54l.265-2.91A1 1 0 0 0 13.81 4H2.19a1 1 0 0 0-.996 1.09l.637 7a1 1 0 0 0 .995.91H9v1H2.826a2 2 0 0 1-1.991-1.819l-.637-7a1.99 1.99 0 0 1 .342-1.31zm6.339-1.577A1 1 0 0 0 6.172 2H2.5a1 1 0 0 0-1 .981l.006.139C1.72 3.042 1.95 3 2.19 3h5.396l-.707-.707z"/>'+
                                        '<path d="M11.854 10.146a.5.5 0 0 0-.707.708L12.293 12l-1.146 1.146a.5.5 0 0 0 .707.708L13 12.707l1.146 1.147a.5.5 0 0 0 .708-.708L13.707 12l1.147-1.146a.5.5 0 0 0-.707-.708L13 11.293l-1.146-1.147z"/>'+
                                    '</svg>');  

        $(this).parent().siblings("#NoFolders")[0].value = "NoFolders";
        $(this).parent().attr('data-original-title', "Switch on to store files in folders split by the '.' s in the name.");
    }
}

$('[id^=noFoldersSwitch]').click(toggleNoFolders);

// Check to persist state of no folder switches  
$('.mapping-input-group').children('.voca').each(function(){
    var currElement = $(this).children().children(".custom-control").children()[0]
    if(!$(currElement).hasClass("active")) {
        $(currElement).parent().siblings("#NoFolders")[0].value = "NoFolders";
    }
});
</script>
</body>
</html>
<script method='OnPreHTTP' language='cache' runat='server' returntype='%Boolean'>	
	try {
		set %session.UseSessionCookie = 1 // Always set back to autodetect
		set %session.CookiePath = "" // Always clear
		if (%request.UserAgent [ " Code/") {
			// Workaround for VSCode webview
			set %session.SessionScope = 0 // none; allowed because...
			set %session.SecureSessionCookie = 1 // secure flag on session cookie - will be ignored over http, but that's OK because we already have it
		}
	} catch e {
		// ignore; may occur on platform versions without the above properties
	}
	quit 1
</script>